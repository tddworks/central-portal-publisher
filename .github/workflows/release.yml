name: Release

# Release workflow for creating and publishing new plugin versions
#
# Triggers:
# - Manual trigger with version input (e.g., 1.0.0, 1.1.0-beta.1)
# - Automatically creates git tag and GitHub release
# - Publishes to Gradle Plugin Portal after successful build
#
# Process:
# 1. Validate version format (semantic versioning)
# 2. Build and test with specified version
# 3. Create git tag and GitHub release
# 4. Publish plugin to Gradle Plugin Portal

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0, 1.1.0-beta.1)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: 'temurin'
          
      - name: Validate version format
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.-]+)?$ ]]; then
            echo "❌ Invalid version format. Use semantic versioning (e.g., 1.0.0, 1.1.0-beta.1)"
            exit 1
          fi
          echo "✅ Version format is valid: ${{ inputs.version }}"
          
      - name: Build and test with release version
        run: ./gradlew clean build koverVerify -Pversion=${{ inputs.version }}
        
      - name: Code quality checks
        run: ./gradlew spotlessCheck buildHealth -Pversion=${{ inputs.version }}
        
      - name: Create git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin "v${{ inputs.version }}"
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ inputs.version }}
          name: v${{ inputs.version }}
          draft: false
          prerelease: ${{ contains(inputs.version, '-') }}
          generate_release_notes: true
          
      - name: Publish plugin to Gradle Plugin Portal
        run: ./gradlew publishPlugins -Pversion=${{ inputs.version }}
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}