# Version catalog for Central Portal Publisher
# Organized for open source project maintainability
[versions]
assertj-core = "3.27.4"
dependency-analysis = "3.0.0"
# Gradle plugins
gradle-plugin-publish = "1.3.1"
# Testing framework
junit = "5.13.4"
# Core language and frameworks
kotlin = "2.2.10"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.9.0"
# Code quality and coverage
kover = "0.9.1"
ktor = "3.2.3"
mockito-junit-jupiter = "5.19.0"
mockito-kotlin = "6.0.0"
# HTTP and networking
okhttp = "5.1.0"
okio = "3.16.0"
# Common open source plugins (for future use)
spotless = "7.2.1"
system-stubs-jupiter = "2.1.8"
version-catalog-update = "1.0.0"

[libraries]
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj-core" }
# Testing libraries
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
# Kotlin testing (for KMP projects)
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
# Core Kotlin libraries
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
# Ktor client (if needed for future HTTP migration)
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito-junit-jupiter" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
# HTTP and IO
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
system-stubs-jupiter = { module = "uk.org.webcompere:system-stubs-jupiter", version.ref = "system-stubs-jupiter" }

[bundles]
# HTTP client bundle for the main implementation
http-client = [
    "okhttp",
    "okhttp-logging-interceptor",
    "okio",
]
# Testing bundle for JVM projects
jvm-test = [
    "assertj-core",
    "junit-jupiter",
    "mockito-junit-jupiter",
    "mockito-kotlin",
]
# Kotlin testing bundle (for KMP support)
kotlin-test = [
    "kotlin-test",
    "kotlin-test-junit",
    "kotlinx-coroutines-test",
]
# Ktor client bundle (for future migration or alternative HTTP client)
ktor-client = [
    "ktor-client-content-negotiation",
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-okhttp",
    "ktor-serialization-kotlinx-json",
]

# Open source project maintenance (commented - enable as needed)
# maintenance = ["spotless", "versions", "dependency-analysis"]
[plugins]
dependency-analysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependency-analysis" }
# Publishing
gradle-plugin-publish = { id = "com.gradle.plugin-publish", version.ref = "gradle-plugin-publish" }
# Kotlin plugins
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
# Code quality and coverage
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
# Code quality and maintenance (for open source projects)
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
version-catalog-update = { id = "nl.littlerobots.version-catalog-update", version.ref = "version-catalog-update" }
